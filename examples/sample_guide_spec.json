{
  "series_number": 1,
  "guide_number": "1-1",
  "title": "에이전틱 AI 시작하기",
  "subtitle": "AI 어시스턴트에서 자율적 행위자로의 전환",
  "overview": "이 가이드는 AI 어시스턴트의 한계를 넘어서 진정한 자율적 행위자로 전환하는 방법을 다룹니다. 단순한 도구에서 전략적 파트너로 AI를 발전시키는 핵심 원리와 구현 방법을 학습합니다.",
  "objectives": [
    "AI 어시스턴트와 AI 에이전트의 차이점 이해",
    "자율성의 정의와 구현 방법 파악",
    "에이전트 기반 아키텍처의 핵심 개념 습득",
    "첫 번째 자율 에이전트 구축 실습"
  ],
  "prerequisites": [
    "Python 기본 문법 이해",
    "객체지향 프로그래밍 개념 숙지",
    "API 사용 경험",
    "기본적인 명령줄 사용법"
  ],
  "estimated_time": "2시간",
  "difficulty": "중급",
  "template_type": "guide",
  "sections": {
    "core_concepts": [
      {
        "title": "AI 어시스턴트 vs AI 에이전트",
        "content": "현재 대부분의 AI 도구들은 반응형 어시스턴트입니다. 사용자가 명령을 내려야만 작동하며, 한 번에 하나의 작업만 처리할 수 있습니다. 반면 AI 에이전트는 능동적 행위자로, 목표를 달성하기 위해 독립적으로 행동하고 복잡한 워크플로우를 순차적으로 처리할 수 있습니다."
      },
      {
        "title": "자율성의 핵심 구성 요소",
        "content": "에이전트는 명확한 목표를 가지고 행동하며, 주변 환경을 인식하고 적절히 반응합니다. 또한 경험을 통해 학습하고 개선되는 능력을 가지고 있습니다."
      }
    ],
    "practical_steps": [
      {
        "title": "프로젝트 설정",
        "content": "가상환경 설정 및 필요한 패키지 설치"
      },
      {
        "title": "기본 에이전트 구현",
        "content": "간단한 자율 에이전트 클래스 구현"
      },
      {
        "title": "고급 기능 추가",
        "content": "메모리, 학습, 적응 기능 구현"
      }
    ]
  },
  "code_examples": [
    {
      "title": "기본 에이전트 클래스",
      "language": "python",
      "code": "class SimpleAutonomousAgent:\n    def __init__(self, name, role):\n        self.name = name\n        self.role = role\n        self.memory = []\n        self.tools = []\n    \n    def think(self, prompt):\n        # 사고 과정 구현\n        pass\n    \n    def execute_plan(self, plan):\n        # 계획 실행\n        pass"
    },
    {
      "title": "메모리 시스템",
      "language": "python",
      "code": "class AgentMemory:\n    def __init__(self):\n        self.short_term = {}\n        self.long_term = {}\n        self.episodic = []\n    \n    def store_experience(self, experience):\n        # 경험 저장\n        pass"
    }
  ],
  "resources": [
    {
      "title": "OpenAI API Documentation",
      "url": "https://platform.openai.com/docs",
      "description": "OpenAI API 공식 문서"
    },
    {
      "title": "CrewAI Framework",
      "url": "https://docs.crewai.com/",
      "description": "CrewAI 프레임워크 문서"
    },
    {
      "title": "LangChain Documentation",
      "url": "https://python.langchain.com/",
      "description": "LangChain 라이브러리 문서"
    }
  ],
  "next_steps": [
    {
      "title": "명세 기반 개발(SDD) 마스터하기",
      "path": "1-2-spec-driven-development.md",
      "description": "Spec Kit으로 첫 프로젝트 시작하기"
    },
    {
      "title": "원칙 기반 엔지니어링으로의 전환",
      "path": "1-3-principle-based-engineering.md",
      "description": "감성 코딩을 넘어서 원칙 기반 엔지니어링으로"
    }
  ],
  "troubleshooting": [
    {
      "problem": "API 키 오류",
      "solution": "환경 변수에 올바른 API 키가 설정되어 있는지 확인하세요."
    },
    {
      "problem": "메모리 부족",
      "solution": "에이전트의 메모리 사용량을 모니터링하고 필요시 정리하세요."
    }
  ],
  "best_practices": [
    "명확한 목표와 제약 조건을 설정하세요",
    "에이전트의 행동을 로깅하여 디버깅을 용이하게 하세요",
    "점진적으로 복잡성을 증가시키세요",
    "에러 처리와 복구 메커니즘을 구현하세요"
  ],
  "common_pitfalls": [
    "너무 복잡한 에이전트를 처음부터 만들려고 시도",
    "에러 처리 없이 구현",
    "메모리 관리 소홀",
    "테스트 없이 배포"
  ]
}
